<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title><%= entry.name %></title>    <meta content="width=device-width, initial-scale=1" name="viewport">
        <meta content="Webflow" name="generator">
        <link href="css/normalize.css" rel="stylesheet" type="text/css">
        <link href="css/webflow.css" rel="stylesheet" type="text/css">
        <link href="css/websitelike.webflow.css" rel="stylesheet" type="text/css">
        <link href="https://fonts.googleapis.com" rel="preconnect">
        <link href="https://fonts.gstatic.com" rel="preconnect" crossorigin="anonymous">
        <script src="https://ajax.googleapis.com/ajax/libs/webfont/1.6.26/webfont.js" type="text/javascript"></script>
        <script type="text/javascript">WebFont.load({  google: {    families: ["Inter:regular,600,700,900"]  }});</script>
        <script type="text/javascript">!function(o,c){var n=c.documentElement,t=" w-mod-";n.className+=t+"js",("ontouchstart"in o||o.DocumentTouch&&c instanceof DocumentTouch)&&(n.className+=t+"touch")}(window,document);</script>
        <link href="images/favicon.ico" rel="shortcut icon" type="image/x-icon">
        <link href="images/webclip.png" rel="apple-touch-icon">
        <link rel="stylesheet" href="/css/styles.css">
    </head>
<body>
          <div class="w-embed">
            <style>
        .recent-video-thumb { display: block !important; }
        </style>
          </div>
          <div class="triangle_bg"></div>
          <div class="w-layout-vflex container-page">
            <div class="w-layout-hflex header">
              <a href="/" class="logo-link w-inline-block"><img src="/images/logox2.png" loading="lazy" alt="" class="logo"></a>
              <div class="form-block no-padding w-form">
                <form id="wf-form-Search-Form" name="wf-form-Search-Form" data-name="Search Form" method="get" class="search-form-home" data-wf-page-id="66b549889516f439d29acede" data-wf-element-id="98f002ca-b4c6-6ceb-651d-43e0a57b9d6b">
                    <input class="search-input w-input" autofocus maxlength="256" name="Search-3" data-name="Search 3" placeholder="E.g Logan Paul, PewdiePie..." type="text" id="Search-3" required>
                    <input type="submit" data-wait="Please wait..." class="submit-button w-button" value="Submit">
                </form>
              </div>
              <a href="trending.html" class="trending-button w-inline-block"><img src="/images/Chart_Line.svg" loading="lazy" alt="">
                <div class="trending_button_text">Trending</div>
              </a>
            </div>
            <div class="w-layout-vflex ad-banner-horizontal"><img src="/images/banner-ad1.jpg" loading="lazy" sizes="(max-width: 479px) 100vw, (max-width: 767px) 92vw, 94vw" srcset="/images/banner-ad1-p-500.jpg 500w, /images/banner-ad1-p-800.jpg 800w, /images/banner-ad1.jpg 980w" alt="" class="ad"></div>
            <div id="w-node-_08e2b5f6-4fcf-ccf0-de37-cd0b46b7f40a-210d55eb" class="w-layout-layout _2-col wf-layout-layout">
              <div id="w-node-_08e2b5f6-4fcf-ccf0-de37-cd0b46b7f40b-210d55eb" class="w-layout-cell col-left">
                <div class="w-layout-hflex creator-box"><img src="/images/img-placeholder.png" loading="lazy" id="channelThumbnail" alt="" class="creator-thumb">
                  <div class="creator-box-right">
                    <div class="w-layout-hflex creator-name-button">
                      <div class="creator-name-box">
                        <h1 id="channelName" class="creator_name w-dyn-bind-empty"><%= entry.handle %></h1>
                        <div class="w-layout-hflex follower-count current">
                          <div id="channelDescription" class="text-block">Description</div>
                        </div>
                      </div>
                      <a href="<%= entry.youtubeLink %>" class="channel-button w-inline-block">
                        <div class="channel_button_text">Go to Channel</div><img src="/images/yt_icon.svg" loading="lazy" alt="" class="yt-icon">
                      </a>
                    </div>
                    <div class="w-layout-hflex creator-stats">
                      <div class="stat-box">
                        <h3 class="stat-heading">Uploads</h3>
                        <div id="videoCount" class="stat-value">527</div>
                      </div>
                      <div class="stat-box">
                        <h3 class="stat-heading">Subscribers</h3>
                        <div id="subscriberCount" class="stat-value">3.57M</div>
                      </div>
                      <div class="stat-box">
                        <h3 class="stat-heading">Video Views</h3>
                        <div id="viewCount" class="stat-value">202,352,869</div>
                      </div>
                    </div>
                  </div>
                </div>
                <div class="w-layout-hflex lower-boxes">
                  <div class="w-layout-vflex youtubers-like-box">
                    <div class="combi-title">
                      <h2 class="combi-title-white">YouTuber&#x27;s Like <%= entry.handle %></h2>
                      <h2 class="combi-title-red w-dyn-bind-empty"></h2>
                    </div>
                    <div class="results-list w-dyn-list">
                      <div role="list" class="collection-list w-dyn-items">
                        <% randomEntries.forEach(randomEntry => { %>
                        <div id="w-node-_642cddaf-68d5-6a91-42cc-1a602c025249-210d55eb" role="listitem" class="youtube-single-box w-dyn-item">
                          <a href="/<%= randomEntry.handle %>" class="w-inline-block">
                            <div class="single-box-inner"><img src="/images/img-placeholder.png" loading="lazy" id="channelThumbnail" alt="" class="single-box-thumbnail w-dyn-bind-empty">
                              <h3 class="single-creator-name w-dyn-bind-empty"><%= randomEntry.handle %></h3>
                            </div>
                          </a>
                        </div>
                        <% }); %>
                      </div>
                    </div>
                  </div>
                </div>
              </div>
              <div id="w-node-_08e2b5f6-4fcf-ccf0-de37-cd0b46b7f40c-210d55eb" class="w-layout-cell col-right"><img src="/images/banner-ad2.jpg" loading="lazy" alt="" class="ad"></div>
            </div>
          </div>
          <div class="bg-grad"></div>
          <script src="https://d3e54v103j8qbb.cloudfront.net/js/jquery-3.5.1.min.dc5e7f18c8.js?site=66b50ecaeddbc5ef791cc7a7" type="text/javascript" integrity="sha256-9/aliU8dGd2tb6OSsuzixeV4y/faTqgFtohetphbbj0=" crossorigin="anonymous"></script>
          <script src="js/webflow.js" type="text/javascript"></script>
           <script>
        (function() {
            const channelId = '<%= entry.channelId %>'; // Use the channel ID from the server
            const apiKey = '<%= apiKey %>'; // Use the API key from the server
            getChannelStats(channelId, apiKey);
            getRecentVideos(channelId, apiKey);
        })();

        async function getChannelStats(channelId, apiKey) {
            const url = `https://www.googleapis.com/youtube/v3/channels?part=snippet,statistics&id=${channelId}&key=${apiKey}`;
            try {
                const response = await fetch(url);
                const data = await response.json();
                console.log('API Response:', data); // Log the response to see what's returned
                if (data.items && data.items.length > 0) {
                    const statistics = data.items[0].statistics;
                    const snippet = data.items[0].snippet;
                    const channelName = snippet.title;
                    const channelThumbnail = snippet.thumbnails.default.url; // Default thumbnail URL
                    const subscriberCount = statistics.subscriberCount;
                    const videoCount = statistics.videoCount;
                    const viewCount = statistics.viewCount;
                    let channelDescription = snippet.description;
                    const formattedSubscriberCount = formatNumber(subscriberCount);
                    const formattedViewCount = formatNumber(viewCount);
                    // Trim the description to 280 characters and add '...'
                    channelDescription = trimDescription(channelDescription, 280);
                    // Display the counts and description
                    document.getElementById('channelThumbnail').src = channelThumbnail;
                    document.getElementById('channelName').innerText = channelName;
                    document.getElementById('subscriberCount').innerText = formattedSubscriberCount;
                    document.getElementById('videoCount').innerText = videoCount;
                    document.getElementById('viewCount').innerText = formattedViewCount;
                    document.getElementById('channelDescription').innerText = channelDescription;
                } else {
                    document.getElementById('subscriberCount').innerText = 'No data found';
                    document.getElementById('videoCount').innerText = 'No data found';
                    document.getElementById('viewCount').innerText = 'No data found';
                    document.getElementById('channelDescription').innerText = 'No data found';
                }
            } catch (error) {
                console.error('Error fetching channel stats:', error);
                document.getElementById('subscriberCount').innerText = 'Error loading';
                document.getElementById('videoCount').innerText = 'Error loading';
                document.getElementById('viewCount').innerText = 'Error loading';
                document.getElementById('channelDescription').innerText = 'Error loading';
            }
        }

        function formatNumber(num) {
            if (num >= 1000000) {
                return (num / 1000000).toFixed(1) + 'M'; // Format as 'M' for millions
            } else if (num >= 1000) {
                return (num / 1000).toFixed(1) + 'K'; // Format as 'K' for thousands
            } else {
                return num; // Return the number as is if it's less than 1000
            }
        }

        function trimDescription(description, maxLength) {
            if (description.length > maxLength) {
                return description.substring(0, maxLength) + '...';
            }
            return description;
        }
    </script>



        </body>
        </html>






</body>
</html>